<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
   <title>MbUnit Snippets</title>
   <link href="../Styles/MbUnitDocs.css" rel="stylesheet" type="text/css" />
</head>
<body>
   <h1>
      MbUnit Snippets</h1>
   <p>
      MbUnit ships with 15 C#\VB and 2 XML code snippets for use with Visual Studio as
      follows. To install them,</p>
   <ol>
      <li>Open the Code Snippets Manager (<em>Tools | Code Snippet Manager or Ctrl+K,B</em>)<br />
         <a href="../Images/CodeSnippetsManager[1].png" target="_blank" title="Display this image at full size">
            <img src="../Images/CodeSnippetsManager[1]Thumbnail.png" alt="VS Code Snippet Manager screenshot. Click this thumbnail image to show full size image" /></a><br />
         <br />
      </li>
      <li>Choose the language you want to add snippets for from the <em>&#8220;Language&#8221;</em>
         dropdown menu at the top of the manager dialog.</li>
      <li>Click Add and navigate to the MbUnit installation directory. Open the VSSnippets
         directory inside that.</li>
      <li>Select the folder containing the snippets for your language and click <em>&#8220;Select
         Folder&#8221;</em>.</li>
      <li>Verify the snippets have been added by expanding the MbUnit*Snippets folder in
         the manager dialog and selecting a few. Press OK when done.<br />
         <a href="../Images/CodeSnippetsManager[2].png" target="_blank" title="Display this image at full size">
            <img src="../Images/CodeSnippetsManager[2]Thumbnail.png" alt="MbUnit snippets listed in Code Snippet Manager screenshot. Click this thumbnail image to show full size image" /></a><br />
         <br />
      </li>
   </ol>
   <h2>
      Xml Snippets</h2>
   <p>
      There are 2 XML snippets included with MbUnit. To use them, use either <em>Edit | Intellisense
         | Insert Snippet or Ctrl+K, X</em>.</p>
   <ul>
      <li><strong>msbuild</strong> : Creates an empty MSBuild task to run MbUnit.</li>
      <li><strong>nant</strong> : Creates an empty NAnt task to run MbUnit.</li>
   </ul>
   <p>
      Note that in both cases, the XML calls custom tasks for MSBuild and nAnt which we&#8217;ve
      developed for ease of use. Have a look at the <a href="../MbUnitInAnAgileEnvironment/MbUnitAndMSBuild.htm">
         integrating MSBuild</a> and <a href="../MbUnitInAnAgileEnvironment/MbUnitAndNant.htm">
            integrating nAnt</a> pages for more on how to get these custom tasks working.</p>
   <h2>
      C# and Visual Basic Snippets</h2>
   <p>
      There are 15 code snippets for test writing, both in C# and VB. To use them, simply
      type the name given below while in a VB or C# source file and press TAB twice.</p>
   <ul>
      <li><strong>autorunner</strong> : Adds all the basic code for a simple <a href="CreatingSelfTestingAssemblies.htm">
         executable self-testing assembly</a>.</li>
      <li><strong>combinatorial</strong> : Adds code for a combinatorial test with 2 parameters
         and 2 factories </li>
      <li><strong>datafixture</strong> : Adds code for a data fixture test class</li>
      <li><strike><strong>model</strong> : no longer valid</strike></li>
      <li><strong>processfixture</strong> : Adds code for a process fixture test class where
         test are performed in a given order</li>
      <li><strong>rowtest</strong> : Adds code for a simple row test</li>
      <li><strong>state</strong> : Adds code for an IState wrapper</li>
      <li><strike><strong>submodel</strong> : no longer valid</strike></li>
      <li><strong>test</strong> : Adds code for a simple test</li>
      <li><strong>testexpectedexception</strong> : Adds code for a simple test that expects
         an exception to be raised</li>
      <li><strong>testfixture</strong> : Adds code for a basic fixture test class including
         setup, teardown and test methods.</li>
      <li><strong>testsuitefixture</strong> : Adds code for a test suite (dynamic) fixture
         class and method to add tests to the suite at runtime</li>
      <li><strong>typefixture</strong> : Adds code for a type fixture test class including
         setup, teardown and test methods.</li>
      <li><strong>typefixturefac</strong> : Adds code for a type fixture test class including
         setup, teardown and test methods using a provider factory</li>
      <li><strong>usingmbunit</strong> : Adds the standard using or imports statement for
         MbUnit.Framework.</li>
   </ul>
   <p>
      If you&#8217;d like to donate your own snippets to the team or suggest how to improve
      the current ones, get in touch on the <a href="http://groups.google.com/group/MbUnitDev">
         MbUnit-Dev google group</a>.</p>
</body>
</html>
