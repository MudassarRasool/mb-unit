<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
   <title>MbUnit In An Agile Environment</title>
   <link href="../Styles/MbUnitDocs.css" rel="stylesheet" type="text/css" />
</head>
<body>
   <h1>
      MbUnit In An Agile Environment</h1>
   <p>
      &#8220;An agile environment&#8221; may mean different things to different people
      reading this, so first a definition. Being able to write tests as you write your
      code ensures that whatever new code you create, it still does what you think it
      should. Towards this goal then, an agile environment here means that
   </p>
   <ul>
      <li>your code resides on a source control server so that changes are easily accessible
         to all and prior versions are available if tests fail after code is committed to
         the server</li>
      <li>scripts exist on your server which automate the building, testing and deployment
         (to a staging server) of your production code, typically using <a href="http://nant.sourceforge.net/">NAnt</a> or <a href="http://msdn2.microsoft.com/en-us/library/0k6kkbsd.aspx">MSBuild</a></li>
      <li>these scripts may or may not be triggered automatically according to a given set
         of rules. For example, by each new code committal to the source control server,
         or at the close of business each day. This is known as <a href="http://en.wikipedia.org/wiki/Continuous_integration">automated continuous integration</a>.</li>
   </ul>
   <p>
      There&#8217;s much more to the practice of <a href="http://en.wikipedia.org/wiki/Agile_software_development">agile software development</a> than this,
      but from its role as a unit testing framework, MbUnit has a say on these three things
      (besides how you actually write tests) and to that extent includes</p>
   <ul>
      <li><a href="MbUnitAndNant.htm">Custom automation tasks for NAnt</a></li>
      <li><a href="MbUnitAndMSBuild.htm">Custom automation tasks for MSBuild</a></li>
      <li><a href="MbUnitAndCruiseControl.htm">Plugins for CruiseControl.Net</a>, one of
         the most common pieces of continuous integration server software for the .NET platform</li>
      <li><a href="MbUnitReports.htm">Test run reports generated in any of four different
         formats for your scripts to consume as required</a>.</li>
   </ul>
   <p>
      We also offer our thoughts on <a href="MbUnitInSourceControl.htm">how you add
         MbUnit to your source control server</a>.
   </p>
   <p><em>For a great overview of setting up a simple automated build environment (which could then be integrated into Cruise Control.NET) have a look at <a href="http://www.mikebroberts.com/blogtastic/">Mike Roberts&#8217;</a> excellent series of articles on how to build a .NET development tree. You can find them all at <a href="http://www.codeplex.com/treesurgeon">the TreeSurgeon CodePlex site</a> located towards the bottom of the home page. TreeSurgeon is Mike&#8217;s stab at automating the creation of the tree he describes, now maintained by <a href="http://weblogs.asp.net/bsimser">Bill Simser</a></em></p>

</body>
</html>
