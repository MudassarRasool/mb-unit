<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Working With MbUnit Reports</title>
   <link href="../Styles/MbUnitDocs.css" rel="stylesheet" type="text/css" />
</head>
<body>
<h1>Working With MbUnit Reports</h1>
   <p>
      If you use the MbUnit <a href="../GettingStarted/MbUnitConsoleRunner.htm">console runner</a> or <a href="../GettingStarted/MbUnitGUI.htm">GUI</a> to run your tests rather than a third party tool such as <a href="../MbUnitAndVisualStudio/MbUnitAndTestDrivenDotNet.htm">TestDriven.NET</a> or <a href="../MbUnitAndVisualStudio/MbUnitAndResharper.htm">Resharper</a>, you'll know that MbUnit can generate a report on how all 
      the tests fared&nbsp;sorted by assembly, namespace, and fixture. For each of these, 
      the following quantities are summarized with a counter:</p>
   <ul>
      <li>number of successful tests</li>
      <li>number of failed tests</li>
      <li>number of ignored tests</li>
      <li>number of skipped tests</li>
      <li>duration in seconds</li>
   </ul>
   <p>
      MbUnit will generate test reports for you in any of four formats. Click on a format to see a report for some of the FizzBuzz example code we wrote <a href="../GettingStarted/WritingYourFirstTests.htm">here</a>.
   </p>
   <ul>
      <li><a href="Sample Reports/mbunit-result-10_08_200700_23.xml">XML</a></li>
      <li><a href="Sample Reports/MbUnit Test Report.mht">HTML</a></li>
      <li><a href="Sample Reports/mbunit-result-10_08_200700_23.txt">Text</a></li>
      <li><a href="Sample Reports/mbunit-result-dox-10_08_200700_23.dox">doxyfied</a></li>
   </ul>
   <p>
      GUI and console runner can also apply your own XSL transforms to an XML report as you see fit, but exactly which report type you choose to use and how is your choice. For reference, you can find <a href="http://mb-unit.googlecode.com/svn/trunk/v2a/Trunk/mbunit/MbUnit.Framework/Core/Reports/">the schema for the XML report here</a>. Included in the same folder are the XSL stylesheets we use to transform that into our HTML and text reports and an XML report compatible with <a href="MbUnitAndCruiseControl.htm">CruiseControl.NET</a></p>
   <h2>
      Dealing With Reports Programmatically</h2>
   <p>
      If you want to work with MbUnit&#8217;s report generators on a code level (because for example, you&#8217;re <a href="../MbUnitAndVisualStudio/CreatingSelfTestingAssemblies.htm">writing a self-testing assembly</a>), the MbUnit.Core.Report class contains static helper classes that can be used to quickly output reports. For example.</p>
<pre class="csharpcode"><span class="rem">// computed by AutoRunner or other object</span>
 ReportResult result = ...; 

 <span class="rem">// render to html and store filename</span>
 <span class="kwrd">string</span> fileName = Report.RenderToHtml(result);

 <span class="rem">// display in browser</span>
 Process.Start(fileName);
</pre>
</body>
</html>
