<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
   <title>Putting MbUnit In Source Control</title>
   <link href="../Styles/MbUnitDocs.css" rel="stylesheet" type="text/css" />
</head>
<body>
   <h1>
      Putting MbUnit In Source Control</h1>
   <p>
      If you code for a living, you should be familiar with <a href="http://www.ericsink.com/scm/source_control.html">
         using a source control server</a> to store and keep prior versions of all your
      code. Having to check in your code with a named account means everyone knows whose
      code broke the build :) Even if you code solo or just for a hobby, there are still
      <a href="http://www.ericsink.com/item_10134.html">good reasons</a> why single user
      source control is a good idea.</p>
   <p>
      But why add the MbUnit dlls into the source control for your project? So that you
      have a clear and apparent record of which version of MbUnit you&#8217;ve been using
      and so that your NAnt or MSBuild scripts have a readily available copy of that version
      of MbUnit available to run your tests with.
   </p>
   <p>
      Let&#8217;s look at how we&#8217;ve structured the source tree for MbUnit Gallio.
      (We can only suggest what we do ourselves after all).
   </p>
   <p>
      <a href="../Images/SourceControl[1].png" target="_blank" title="Display this image at full size">
         <img src="../Images/SourceControl[1]Thumbnail.png" alt="The MbUnit Gallio source tree. Click this thumbnail image to show full size image" /></a>
   </p>
   <p>
      This screenshot shows the top directory for MbUnit Gallio. It is organised with the following intent
   </p>
   <ul>
      <li>The root is the upper most point of our project&#8217;s development tree.</li>
      <li>All files belonging to this project exist under the root.</li>
      <li>No files belonging to any other project exist under the root.</li>
      <li>All source code resides in a sub-folder under the root (called src).</li>
      <li>All third party code used in project resides in a different sub-folder under the root from your source code (called libs)</li>
      <li>Build and license files sit in the root folder.</li>
   </ul>   
   <p>
      Calling the directories libs and src is entirely our choice - the subtext
      team call the libs directory &#8220;BuildTools&#8221; <a href="http://subtext.svn.sourceforge.net/viewvc/subtext/trunk/">
         for instance</a> but it works for us. </p>

   
</body>
</html>
