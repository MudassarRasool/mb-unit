<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
   <title>Specifying Test Authors, Categories Importance and Targets</title>
   <link href="../Styles/MbUnitDocs.css" rel="stylesheet" type="text/css" />
</head>
<body>
   <h1>
      Specifying Test Authors, Categories, Importance and Targets</h1>
   <p>
      Both the <a href="MbUnitConsoleRunner.htm">MbUnit console runner</a> and <a href="MbUnitGUI.htm">
         GUI runner</a> allow you to run the tests in your project according to a number
      of criteria as follows
   </p>
   <ul>
      <li>Namespace</li>
      <li>Class</li>
      <li><a href="#authors">Author</a></li>
      <li><a href="#categories">Category</a></li>
   </ul>
   <p>
      The <a href="MbUnitGUI.htm">GUI runner</a> also divides up tests according to
   </p>
   <ul>
      <li><a href="#importance">The perceived importance of the tests</a></li>
      <li><a href="#targets">The class type the tests are running against (the test target type)</a></li>
   </ul>
   <p>
      Your tests will always be divisible into the namespace and class in which you have
      written them, but making them divisible by any of the other four criteria are purely
      optional. Should you wish to do this, each criteria can be applied to test fixture
      class (<em>not an individual test</em>) by adorning it with a specific attribute
      as follows.
   </p>
   <h2 id="authors">
      Test Authors</h2>
   <p>
      Use the [Author] attribute to specify the name (email and website) of the test fixture&#8217;s
      author. For example</p>
   <pre class="csharpcode">   [TestFixture]
   [Author(<span class="str">"Dan"</span>, <span class="str">"dan@hisemail.com"</span>, <span
      class="str">"http://docs.mbunit.com"</span>)]
   <span class="kwrd">public</span> <span class="kwrd">class</span> MyFizzBuzzTests
   {      
      [Row(1)]
      [Row(2)]
      [RowTest]
      <span class="kwrd">public</span> <span class="kwrd">void</span> ToFizzBuzz_SendNumberNotDivisibleBy3Or5_ReturnsNumberAsString(<span
         class="kwrd">int</span> NumberToTest)
      {
         Assert.AreEqual(NumberToTest.ToString(), 
            FizzBuzz.FizzBuzz.ToFizzBuzz(NumberToTest));
      }
      
      ... more tests ...
   }</pre>
   <p>
      In this example, all the tests in the MyFizzBuzzTests class will be assigned the
      author &#8220;Dan&#8221;. If you don&#8217;t specify an author, MbUnit will give
      the fixture the default author value <em>&#8220;Anonymous&#8221;</em></p>
   <h2 id="categories">
      Test Categories</h2>
   <p>
      Use the [FixtureCategory] attribute to specify the category for the tests in the
      class. For example</p>
   <pre class="csharpcode">   [TestFixture]
   [FixtureCategory(<span class="str">"Core Tests"</span>)]
   <span class="kwrd">public</span> <span class="kwrd">class</span> MyFizzBuzzTests
   {      
      [Row(1)]
      [Row(2)]
      [RowTest]
      <span class="kwrd">public</span> <span class="kwrd">void</span> ToFizzBuzz_SendNumberNotDivisibleBy3Or5_ReturnsNumberAsString(<span
         class="kwrd">int</span> NumberToTest)
      {
         Assert.AreEqual(NumberToTest.ToString(), 
            FizzBuzz.FizzBuzz.ToFizzBuzz(NumberToTest));
      }
      
      ... more tests ...
   }</pre>
   <p>
      In this example, all the tests in the MyFizzBuzzTests class will be assigned the
      category &#8220;Core Tests&#8221;. If you don&#8217;t specify an category, MbUnit
      will give the fixture the default category value <em>&#8220;Misc&#8221;</em></p>
   <h2 id="importance">
      Test Importance</h2>
   <p>
      Use the [Importance] attribute to specify the importance of the tests in the class.
      For example</p>
   <pre class="csharpcode">   [TestFixture]
   [Importance(<span class="str">TestImportance.Critical</span>)]
   <span class="kwrd">public</span> <span class="kwrd">class</span> MyFizzBuzzTests
   {      
      [Row(1)]
      [Row(2)]
      [RowTest]
      <span class="kwrd">public</span> <span class="kwrd">void</span> ToFizzBuzz_SendNumberNotDivisibleBy3Or5_ReturnsNumberAsString(<span
         class="kwrd">int</span> NumberToTest)
      {
         Assert.AreEqual(NumberToTest.ToString(), 
            FizzBuzz.FizzBuzz.ToFizzBuzz(NumberToTest));
      }
      
      ... more tests ...
   }</pre>
   <p>
      In this example, all the tests in the MyFizzBuzzTests class will be classed as &#8220;Critical&#8221;. If you don&#8217;t specify an category, MbUnit will give the tests the default importance level <em>&#8220;Default&#8221;</em>. MbUnit defines five levels of test importance.</p>
   <ul>
      <li>Critical</li>
      <li>Default</li>
      <li>NoOneReallyCaresAbout</li>
      <li>Severe</li>
      <li>Serious</li>
   </ul>
        <h2 id="targets"> Test Targets</h2>
   <p>
      Use the [TestsOn] attribute to specify the target class type for the tests in the
      class. For example</p>
   <pre class="csharpcode">   [TestFixture]
   [TestsOn(<span class="str">typeof(FizzBuzz.FizzBuzz)</span>)]
   <span class="kwrd">public</span> <span class="kwrd">class</span> MyFizzBuzzTests
   {      
      [Row(1)]
      [Row(2)]
      [RowTest]
      <span class="kwrd">public</span> <span class="kwrd">void</span> ToFizzBuzz_SendNumberNotDivisibleBy3Or5_ReturnsNumberAsString(<span
         class="kwrd">int</span> NumberToTest)
      {
         Assert.AreEqual(NumberToTest.ToString(), 
            FizzBuzz.FizzBuzz.ToFizzBuzz(NumberToTest));
      }
      
      ... more tests ...
   }</pre>
   <p>
      In this example, all the tests in the MyFizzBuzzTests class are marked as testing the FizzBuzz.FizzBuzz class. If you don&#8217;t specify a test target, MbUnit
      will marks its target as <em>&#8220;Unknown&#8221;</em></p>
   
</body>
</html>
