<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    This targets file dynamically chooses which project references
    to use when referring to the MbUnit.Gallio project based on the
    current configuration.

    In the 'Release' configuration, it uses a project reference to the
        ILMerged MbUnit.Gallio project.  This is the manner in which
        MbUnit is to be distributed to others.

    In the 'Debug' configuration, it uses project references to the
        original unmerged MbUnit.Core and MbUnit.Framework projects
        and additional references to their dependencies.  This is
        more convenient for writing code and for debugging because
        Intellisense and Resharper are confused by ILMerge and don't
        work well.  Note that the reference to MbUnit.Gallio is kept
        just so an assembly with that name exists but it will only
        contain AssemblyInfo metadata.

    To obtain dynamic project reference behavior in your project you
    should remove all references to MbUnit.Core, MbUnit.Framework and
    their dependencies and then open the *.csproj file in a text editor.

    After this line:
        <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

    Insert this new line:
        <Import Project="..\..\GallioProjectReference.targets" />

        (Use as many '..\' segments as you need to produce a valid
         relative path to this targets file within the source tree.)

    Save the file then reload the project in Visual Studio.

    The first time you open the project you may receive a warning that
    it might not be trustworthy because it is non-standard.
    Choose the option to load the project normally.

    Remark: The main complication here is that there is currently no
            way to remove Items from ItemGroups in MSBuild.  Otherwise
            we could implement this behavior in a somewhat less intrusive
            manner.
  -->

  <PropertyGroup>
    <Root Condition="'$(Root)'=='' and Exists('$(MSBuildProjectDirectory)\..\src\MbUnit.Gallio.ProjectReferences.targets')">..\</Root>
    <Root Condition="'$(Root)'=='' and Exists('$(MSBuildProjectDirectory)\..\..\src\MbUnit.Gallio.ProjectReferences.targets')">..\..\</Root>
    <Root Condition="'$(Root)'=='' and Exists('$(MSBuildProjectDirectory)\..\..\..\src\MbUnit.Gallio.ProjectReferences.targets')">..\..\..\</Root>
    <Root Condition="'$(Root)'==''">SOURCE_TREE_ROOT_NOT_FOUND</Root>
    <Root Condition="! HasTrailingSlash('$(Root)')">$(Root)\</Root>
  </PropertyGroup>

  <ItemGroup Condition="'$(Configuration)'!='Release'">
    <ProjectReference Include="$(Root)src\MbUnit.Gallio\MbUnit.Framework\MbUnit.Framework.csproj">
      <Project>{691E62B3-823F-4F1E-9585-58D0E00B72C3}</Project>
      <Name>MbUnit.Framework</Name>
    </ProjectReference>

    <ProjectReference Include="$(Root)src\MbUnit.Gallio\MbUnit.Core\MbUnit.Core.csproj">
      <Project>{B1843915-598A-4F80-9E47-BA890F879262}</Project>
      <Name>MbUnit.Core</Name>
    </ProjectReference>

    <Reference Include="Castle.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=407dd0808d44fbdc, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(Root)libs\Castle\bin\Castle.Core.dll</HintPath>
    </Reference>

    <Reference Include="Castle.MicroKernel, Version=1.0.0.2, Culture=neutral, PublicKeyToken=407dd0808d44fbdc, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(Root)libs\Castle\bin\Castle.MicroKernel.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(Root)src\MbUnit.Gallio\MbUnit.Gallio\MbUnit.Gallio.csproj">
      <Project>{163537F5-7681-4A17-869C-35C810000273}</Project>
      <Name>MbUnit.Gallio</Name>
    </ProjectReference>
  </ItemGroup>
</Project>
