How to use MbUnit v2 with CruiseControl.Net
===========================================

Using MbUnit v2 in CruiseControl.Net is very straightforward.


CONFIGURING THE SERVER
----------------------

For the server, we need to ensure that the build script runs the tests and generates an XML
formatted MbUnit Test Report that is then merged into the CruiseControl.Net artifacts file
with the <merge> publisher task.

You can use any of the supported MbUnittest runners to run your tests such as MbUnit.Cons
MbUnit.Tasks or MbUnit.MSBuild.Tasks.  The important thing is
to provide appropriate arguments to the test runner such that an XML report is generated
so that the test results can be saved for subsequent display in the dashboard.

Here is one way to do this:

1. Edit the "ccnet.config" file in the CruiseControl.Net "server" folder.

     * Within the <tasks> element, add an element similar to the following AFTER the tasks that
       build your project.  This will run the tests in your test assembly and generate an
       XML test report in the project working directory.

         <exec>
            <executable>$$$PathToMbUnitInstallationFolder$$$\bin\MbUnit.Cons.exe</executable>
            <buildArgs>/rnf:test-report /rt:Xml $$$MyTestAssembly.dll$$$</buildArgs>
         </exec>

     * Within the <publishers> element, add an element similar to the following BEFORE the
       <xmllogger> task element.  This will merge the XML test report into the build artifacts.

          <merge><files><file>test-report.xml</file></files></merge>

2. If you want test summary results to be included in the CCNet build notification emails
   then you must also edit the "ccservice.exe.config" and/or "ccnet.exe.config" files
   depending on whether you run CCNet as a service or as a standalone application.

     * Within the <xslFiles> element add an element similar to the following:

         <file name="xsl\MBUnitSummary.xsl"/>

     * Copy the XSL files into the CCNet server's "xsl" folder overwriting any existing
       files with the same name.

3. Double-check:

     * The XML test report is being generated as part of a build task.
     * The XML test report is being merged into the CruiseControl.Net artifacts file
       as part of a publisher task.
     * The XSL files have been copied and are referenced in the server configuration.

4. Restart CCNet since the server's *.exe.config files have changed and these changes
   are not automatically detected by CCNet.


CONFIGURING THE DASHBOARD
-------------------------

For the dashboard, we need to add some new resources that are used to render the MbUnit Test Report
we must update the dashboard configuration file to include the new test report plugin.

1. Copy the files from "xsl" and "images" folders into the corresponding subdirectories
   of the "webdashboard" folder of your CruiseControl.Net installation overwriting any
   existing files with the same name.

2. Edit the "dashboard.config" file in the CruiseControl.Net "webdashboard" folder.

     * Within the <buildPlugins> element add the following element:

          <xslReportBuildPlugin description="MbUnit Details"
                                actionName="MbUnitDetails"
                                xslFileName="xsl\MBUnitDetails.xsl" />

     * Within the <xslFileNames> sub-element of the <buildReportBuildPlugin> element
       add an element similar to the following:

          <xslFile>xsl\MBUnitSummary.xsl</xslFile>

3. Double-check:

     * The "webdashboard" folder now contains updated "xsl" and "images".
     * The "dashboard.config" file has been edited to include the new build report section
       and XSL file.

4. Restart the CruiseControl.Net web application.  (eg. By resetting IIS.)
