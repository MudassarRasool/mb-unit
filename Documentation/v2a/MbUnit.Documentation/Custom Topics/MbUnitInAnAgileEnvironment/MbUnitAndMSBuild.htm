<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
   <title>Automating MbUnit With MSBuild</title>
   <link href="../Styles/MbUnitDocs.css" rel="stylesheet" type="text/css" />
</head>
<body>
   <h1>
      Automating MbUnit With MSBuild</h1>
   <p>
      MSBuild is one of the two most commonly used automated build tools for .NET projects,
      the other being <a href="MbUnitAndNant.htm">nAnt</a>. Using it rather than Visual Studio directly means that you
      can</p>
   <ul>
      <li>Run scheduled or triggered builds for your project</li>
      <li>Run any number of pre- and post-build events on your code, such as unit testing,
         code analysis and code metrics packages.</li>
   </ul>
   <p>
      and all without a sniff of Visual Studio. MSBuild is freely available as part of
      the .NET 2.0 Framework. Its build scripts are written as XML documents and can be
      automated or run manually as appropriate. Indeed, Visual Studio .sln files are actually
      MSBuild files and you can build your solutions directly with msbuild without ever
      opening Visual Studio if you wanted to. <a href="http://msdn2.microsoft.com/en-us/library/0k6kkbsd.aspx">
         You can find the full syntax reference for MSBuild here</a>.</p>
   <h2>
      The MbUnit Custom MSBuild Task</h2>
   <p>
      MbUnit includes code for a custom &lt;MbUnit&gt; MSBuild task which makes the running
      of unit tests through MbUnit and subsequent report generation much more straightforward.
      To get this working, you&#8217;ll need to</p>
      <ol>
         <li>Know where copies of the MbUnit DLLs are. You don&#8217;t need to copy them anywhere,
            but you do need to make sure that the following four MbUnit DLLs are in the same
            directory.
            <ul>
               <li>MbUnit.MSBuild.Tasks.dll</li>
               <li>MbUnit.Framework.dll</li>
               <li>QuickGraph.dll</li>
               <li>QuickGraph.Algorithms.dll</li>
            </ul>
            If you&#8217;ve used other MbUnit DLLs in your test code, you&#8217;ll need to include
            those as well, but these four are the minimum. With that done, add a &lt;UsingTask&gt;
            node to your MSBuild project that specifies the full name of the MSBuild task (<em>MbUnit.MSBuild.Tasks.MbUnit</em>)
            and the location of the MbUnit.MSBuild.Tasks.dll file. Note that MSBuild will assume
            that all your other MbUnit DLLs are in the same directory as this, hence the need
            to have them all in one place. The DLL directory can be given as an absolute or
            relative path. </li>
            <li>Include the &lt;MbUnit&gt; task in one of your nAnt scripts. For example, the following script runs the tests in FizzBuzzTests.dll, creates a HTML report of the test run and saves it in the current directory.
            
            <pre class="csharpcode">
<span class="kwrd">&lt;</span><span class="html">Project</span> <span class="attr">xmlns</span><span class="kwrd">="http://schemas.microsoft.com/developer/msbuild/2003"</span><span class="kwrd">&gt;</span>
   <span class="kwrd">&lt;</span><span class="html">UsingTask</span> 
      <span class="attr">TaskName</span><span class="kwrd">="MbUnit.MSBuild.Tasks.MbUnit"</span> 
      <span class="attr">AssemblyFile</span><span class="kwrd">="..\libs\MbUnit.MSBuild.Tasks.dll" /&gt;</span>
   <span class="rem">&lt;!-- defining test assemblies --&gt;</span>
   <span class="kwrd">&lt;</span><span class="html">ItemGroup</span><span class="kwrd">&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">TestAssemblies</span> <span class="attr">Include</span><span class="kwrd">="FizzBuzzTests.dll"</span> <span class="kwrd">/&gt;</span>
   <span class="kwrd">&lt;/</span><span class="html">ItemGroup</span><span class="kwrd">&gt;</span>
   <span class="rem">&lt;!-- test target --&gt;</span>   
   <span class="kwrd">&lt;</span><span class="html">Target</span> <span class="attr">Name</span><span class="kwrd">="Tests"</span><span class="kwrd">&gt;</span>
      <span class="kwrd">&lt;</span><span class="html">MbUnit</span>
         <span class="attr">Assemblies</span><span class="kwrd">="@(TestAssemblies)"</span>
         <span class="attr">ReportTypes</span><span class="kwrd">="html"</span>
         <span class="attr">ReportFileNameFormat</span><span class="kwrd">="myreportname{0}{1}"</span>
         <span class="attr">ReportOutputDirectory</span><span class="kwrd">="." /&gt;</span>
   <span class="kwrd">&lt;/</span><span class="html">Target</span><span class="kwrd">&gt;</span>
<span class="kwrd">&lt;/</span><span class="html">Project</span><span class="kwrd">&gt;</span></pre>
            </li>
            <li>Run the build script</li>
      </ol>
   <h3>Full Syntax</h3>
   <pre class="csharpcode">
<strong>&lt;MbUnit
   Assemblies="@(TestAssemblies)"</strong>
   [ReportTypes="<em>reportType</em>"]
   [ReportFileNameFormat="<em>reportName</em>"]
   [ReportOutputDirectory="<em>reportDirectory</em>"]
   [HaltOnFailure = <em>{true|false}</em>]
   [HaltOnError = <em>{true|false}</em>]
<strong>/&gt;</strong></pre>
<h3>
      &lt;MbUnit&gt; Attributes</h3>
   <p>
      &lt;MbUnit&gt; has the following attributes:</p>
   <ul>
      <li><strong>Assemblies</strong> : Specifies the set (ItemGroup) of test file to be run by MbUnit. This element is mandatory. </li>
      <li><strong>ReportTypes</strong> : Specifies what type of report will be generated
         after the test run. <em>testType</em> is a semi-colon separated list of one or more of the following types - html, text,
         xml, dox. The default is html.</li>
      <li><strong>ReportFileNameFormat</strong> : Specifies the name of the test report
         file being generated. By default, <em>reportName</em> is set to &#8220;mbunit.{0}.{1}&#8221;
         where {0} is replaced by a long datetime string and {1} is replaced by the time
         (on a 24hr clock).</li>
      <li><strong>ReportOutputDirectory</strong> : Specifies the directory where the test
         report file will be saved. <em>reportDirectory</em> can be either an absolute path
         or relative to the current directory when MSBuild is run. Note that this attribute
         is mandatory and must be given a value.</li>
      <li><strong>HaltOnFailure</strong> : Specifies whether or not the rest of the MSBuild
         script should halt if test failures occur. It can have values of true or false.
         The default is false.</li>
            <li><strong>HaltOnError</strong> : Specifies whether or not the rest of the MSBuild
         script should halt if an error occurs. It can have values of true or false.
         The default is false.</li>   
   </ul>
</body>
</html>
