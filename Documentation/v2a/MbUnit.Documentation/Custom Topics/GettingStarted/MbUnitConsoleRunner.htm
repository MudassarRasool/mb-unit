<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
   <title>Using The MbUnit Console Runner</title>
   <link rel="stylesheet" href="../Styles/MbUnitDocs.css" type="text/css" />
</head>
<body>
   <h1>
      Using The MbUnit Console Runner</h1>
   <p>
      MbUnit proffers two applications for running tests against your code. The GUI runner
      discussed <a href="MbUnitGUI.htm">on this page</a> and the command-line-based application
      discussed here. You'll find them both in the MbUnit installation directory; c:\program
      files\mbunit by default. If you intend to use the console runner a lot, it might
      not be a bad idea to add its location to your PATH enivronment variable.</p>
   <p>
      At any point while using the console runner you can bring up a summary of this page
      by typing any of the following alternatives</p>
   <div class="cmdline">
      <pre>   MbUnit.Cons.exe</pre>
      <pre>   MbUnit.Cons.exe /?</pre>
      <pre>   MbUnit.Cons.exe /help</pre>
   </div>
   <h2>
      Full Syntax
   </h2>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe</strong> <em>{AssemblyToTest[...]|ProjectFile}</em> 
      [[<strong>/ap:</strong><em>assemblypath</em>] 
       [<strong>/rt:</strong><em>reportType</em> [<strong>/rf:</strong><em>reportpath</em>] [<strong>/rnf:</strong><em>reportname</em>] [<strong>/tr:</strong><em>transformpath</em>] [<strong>/sr</strong>]] 
       [<strong>/fc:</strong><em>categoryName[,...]]</em>] [<strong>/ec:</strong><em>categoryName[,...]</em>] [<strong>/fa:</strong><em>authorName</em>] [/ft:className] [<strong>/fn:</strong><em>namespace</em>] 
       [<strong>/v:</strong><em>{+|-}</em>] [<strong>/sc:</strong><em>{+|-}</em>]]</pre>
   </div>
   <h2>
      Parameters</h2>
   <ul>
      <li><em>AssemblyToTest[....]</em> : A list of one or more assembly dll files containing
         tests you want Mbunit to run. Use the full path to the dll if you aren't calling
         MbUnit.Cons while in the directory containing the test dll.</li>
      <li><em>ProjectFile</em> : The name (and location) of a MbUnit project file previously
         created with the MbUnit GUI runner. Mbunit.cons will run the tests used in the project
         accordingly.</li>
      <li><strong>/ap or /assembly-path</strong> : Used to locate the MbUnit dlls needed
         to run the tests in your assembly if they aren't in the directory you're calling
         the runner from. <em>assemblyPath</em> should state the full path to the folder
         containing the assemblies.</li>
      <li><strong>/rt or /report-type</strong> : Specifies that a report about the successes
         and failures of the tests should be generated. By default, no report is generated.
         <em>reportType</em> can be one of three values: text, html or xml. This report will
         be saved in %My Documents%\Application Data\Mbunit\Reports unless otherwise specified
         with the /rf option.</li>
      <li><strong>/rf or /report-folder</strong> : Specifies the folder that any report generated
         by the console runner should be saved to. <em>reportpath</em> can be given as either
         a relative or an absolute file path.</li>
      <li><strong>/rnf or /report-name-format</strong> : Specifies the name of the report
         file being generated by the /rt flag. By default, <em>reportname</em> is set to
         "mbunit-{0}{1}" where {0} is replaced by a long datetime string and {1} is replaced
         by the time (on a 24hr clock). For example mbunit-27_07_200718_08.txt.</li>
      <li><strong>/tr or /transform</strong> : Specifies the location of a XSLT stylesheet
         to be applied to the report once it has been generated. <em>transformpath</em> can
         be given as either a relative or an absolute file path.</li>
      <li><strong>/sr or /show-report</strong> : Specifies that the report should be shown
         by the default viewer for the report&#8217;s file type once it has been generated.</li>
      <li><strong>/fc or /filter-category</strong>: Specifies that only those test fixtures
         decorated with the FixtureCategory attribute and <em>categoryName</em> will be run
         in this execution of MbUnit.Cons. <em>categoryName</em> may take the form of a comma-separated
         list of categories if more than one category of test should be run.</li>
      <li><strong>/ec or /exclude-category</strong>: Specifies that those test fixtures decorated
         with the FixtureCategory attribute and <em>categoryName</em> will not be run in
         this execution of MbUnit.Cons. <em>categoryName</em> may take the form of a comma-separated
         list of categories if more than one category of test should be excluded.</li>
      <li><strong>/fa or /filter-author</strong> : Specifies that only those test fixtures
         decorated with the Author attribute and <em>authorName</em> will be run in this
         execution of MbUnit.Cons</li>
      <li><strong>/ft or /filter-type</strong> : Specifies that only those tests of the type
         <em>className</em> will be run in this execution of MbUnit.Cons. <em>className</em>
         may take the form of a comma-separated list of types if more than one types of test
         should be run.</li>
      <li><strong>/fn or /filter-namespace</strong> : Specifies that only those tests in
         the named <em>namespace</em> will be run in this execution of MbUnit.Cons. <em>namespace</em>
         may take the form of a comma-separated list of namespaces if tests in more than
         one namespace should be run.</li>
      <li><strong>/v or /verbose</strong> : Specifies that the command-line output from MbUnit.Cons should also include success or failure details for each test that is run.</li>
      <li><strong>/sc or /shadow-copy-files</strong> : Specifies that the assemblies involved in the test run should be copied to a temporary location and run in an isolated AppDomain.</li>
   </ul>
   <h2>
      Notes</h2>
   <p>
      With the exception of using the /? parameter to bring up the help text, <strong>you
         must always call MbUnit.cons.exe from a directory that contains at least the following
         three MbUnit dlls</strong></p>
   <ul>
      <li>MbUnit.Framework.dll</li>
      <li>QuickGraph.dll</li>
      <li>QuickGraph.Algorithms.dll</li>
   </ul>
   <p>
      Use full pathnames to locate the assembly containing the tests and the assembly
      being tested (with the <strong>/ap</strong> switch) if they are not also in the
      directory you are calling MbUnit.Cons from.</p>
   <p>
      The MbUnit console runner allows tests in an assembly to be grouped by author and
      category using the <strong>/fc</strong>, <strong>/ec</strong> and <strong>/fa</strong>
      flags. See here to learn about specifying <a href="TestAuthorsAndCategories.htm">test
         authors and categories</a>.</p>
   <p>
      The <strong>/rf</strong>, <strong>/rnf</strong>, <strong>/tr</strong> and <strong>/sr</strong>
      flags do nothing unless <strong>/rt</strong> is also specified.</p>
   <p>
      The <strong>/fc</strong> and <strong>/ec</strong> flags only work with fixture categories
      as of v2.4. Support is planned to filter by test categories in a future version.
   </p>
   <h2>
      Examples</h2>
   <p>
      To run tests in two assemblies at once</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe FirstTestAssembly.dll SecondTestAssembly.dll</strong></pre>
   </div>
   <p>
      To run tests in the current directory against code located in c:\productioncode</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /ap:"c:\productioncode" </strong></pre>
   </div>
   <p>
      To run tests and generate a HTML report of the successes and failures of those tests</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /rt:html</strong></pre>
   </div>
   <p>
      To run tests and generate a HTML report of the successes and failures of those tests
      in the current directory</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /rt:html /rf:"."</strong></pre>
   </div>
   <p>
      To run tests and generate a HTML report of the successes and failures of those tests
      in the current directory in a file called MyTestReport.html</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /rt:html /rf:"." /rnf:MyTestReport</strong></pre>
   </div>
   <p>
      To run tests and generate a XML report of the successes and failures of those tests
      with a stylesheet located in the current directory applied to the report post-generation</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /rt:xml /tr:ReportTransform.xsl</strong></pre>
   </div>
   <p>
      To run only the test fixtures in TestAssembly.dll tagged with the fixture category
      "Performance"</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /fc:Performance</strong></pre>
   </div>
   <p>
      To run all the test fixtures in TestAssembly.dll which are not tagged with the fixture
      categories "Performance" or "Exceptions"</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /ec:Performance,Exceptions</strong></pre>
   </div>
   <p>
      To run only the test fixtures in TestAssembly.dll tagged as having the author "Andy"</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /fa:Andy</strong></pre>
   </div>
      <p>
      To run all the tests in TestAssembly.dll in the class TestAssembly.TestClass</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /ft:TestAssembly.TestClass</strong></pre>
   </div>
   <p>
      To run all the tests in TestAssembly.dll in the namespaces TestAssembly.Namespace1 and TestAssembly.Namespace2</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /fn:TestAssembly.Namespace1,TestAssembly.Namespace2</strong></pre>
   </div>
   <p>
      To run all the tests in TestAssembly.dll with extra commentary of the tests being run</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /v</strong></pre>
   </div>
      <p>
      To run all the tests in TestAssembly.dll within an isolated appDomain</p>
   <div class="cmdline">
      <pre>   <strong>MbUnit.Cons.exe TestAssembly.dll /sc</strong></pre>
   </div>
   <h2>
      Running Tests and Reading The Results</h2>
   <p>
      Once you've compiled your tests and have run them through MbUnit.Cons using a combination of some, all or none of the flags above, you'll see the following standard output on the command line.</p>
   <div class="cmdline">
      <pre>   >MbUnit.Cons.exe FizzBuzzTests.dll</pre>
      <pre>   Parsed arguments:</pre>
      <pre>   -- Parsed Arguments</pre>
      <pre>   Files:</pre>
      <pre>           FizzBuzzTests.dll</pre>
      <pre>   Assembly paths:</pre>
      <pre>   Report folder:</pre>
      <pre>   Report Name Format: mbunit-{0}{1}</pre>
      <pre>   Report types:</pre>
      <pre>   Show reports: False</pre>
      <pre>   Filter Category:</pre>
      <pre>   Exclude Category:</pre>
      <pre>   Filter Author:</pre>
      <pre>   Filter Namespace:</pre>
      <pre>   Filter Type:</pre>
      <pre>   Verbose: False</pre>
      <pre>   ShadowCopyFiles: False</pre>
      <pre> </pre>
      <pre>   Start time: 17:14</pre>
      <pre>   [info] Loading test assemblies</pre>
      <pre>   [info] Starting execution</pre>
      <pre>   [info] Sorting assemblies by dependencies</pre>
      <pre>   [info] Setting up fixture colors</pre>
      <pre>   [info] Loading FizzBuzzTests</pre>
      <pre>   [info] <span class="highlight">Found 4 tests</span></pre>
      <pre>   [info] <span class="highlight">Running fixtures.</span></pre>
      <pre>   [info] <span class="highlight">Tests finished: 4 tests, 4 success, 0 failures, 0 ignored</span></pre>
      <pre>   [info] <span class="highlight">All Tests finished: 4 tests, 4 success, 0 failures, 0 ignored in 0.0200288 seconds</span></pre>
      <pre>   [info] MbUnit execution finished in 0.450648s.</pre>
   </div>
   <p>
      The output from the console runner is divided into two parts. The first, headed
      &#8220;Parsed arguments:&#8221; reads back to you the options you've set in the
      call to MbUnit.Cons.exe. In this case, there are none save the name of the test
      assembly being run, FizzBuzzTests.dll. The second section, headed &#8220;Start Time&#8221;,
      shows the progress of the runner as it tries to execute your tests. Note in particular
      the lines highted in red above, which tell you how many tests were run in total
      given the options you set - 4 in this case - how many tests were passed, ignored
      or failed and how long it took to run the tests.</p>
</body>
</html>
